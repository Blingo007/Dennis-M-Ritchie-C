//Programms as avialable in Chapter 1

// temperature converter

/****************************
int main()
{
    int fahr, cel;
    int lower, upper, step;
    lower = 0;
    upper = 300;
    step = 20;

    puts("Hey there, This is Fahrenheit to celsius temperature converter: \n Below are temperature values correspondingly: \n");
    puts("fahrenheit val \t celsius val \n");
    fahr = lower;
    while(fahr <= upper)
        {
            cel = 5*(fahr-32)/9;
            printf("%d\t\t%d\n", fahr,cel);
            fahr = fahr + step;
        }

}
***************************************/


// for Loop practice program (Temperature converter)

/**************************************
int main()
{
    int fahr;
    printf("fahrenheit value \t centigrade value\n");
    for(fahr=300; fahr>=0; fahr=fahr-20)
    {
        printf("%3d \t\t\t %6.1f\n",fahr,(5.0/9.0)*(fahr-32.0));
    }
} 
*****************************************/


/************************************************************************

//  #define SOME CONSTANT HERE                              //syntax for defining SYMBOLIC CONSTANTS


********************************************************************************/




//copy input to output one character at a time
/********************************************************************
int main()
{
int c = getchar();
while(c != EOF)  //End of File = EOF
    {
        putchar(c);
        c =
        getchar();
    }
}

***********************************************************************/

//print the value of EOF  EOF value is Ctrl+d  ASCII value for Ctrl+d is 0X05 or -1
/******************************************************************
int main()
{
int c;
while((c=getchar()) != EOF)
    {
        putchar(c);
    }
printf("%d",EOF);
}

*********************************************************************/

//print number of Input Characters
/*********************************************************************  

int main()
{
int nc = 0;
while (getchar() != EOF)
    {
        ++nc;
    }
printf("%d" , nc);
}

************************************************************************/

/******************************************
//Line counting

int main()
{
    int c , nl;
    nl = 0;
    while((c=getchar()) != EOF)
        {
            if(c == '\n')
            {
                ++nl;
            }
        }
    printf("Total number of Lines are: %i" , nl);
}

*************************************/


/***********************Exercise 1-8 ****************************
Write a program to count blanks, tabs and newlines?
****************************************************************/

/****************************
int main()
{
    int b=0, t=0, nl=0, c;
    while((c=getchar()) != EOF)
        {
            switch (c)
            {
            case ' ':
                ++b;
                break;
            case '\t':
                ++t;
                break;
            case '\n':
                ++nl;
                break;
            }
        }
    printf("This input has %i blanks, %i tabs, %i newlines", b, t, nl);

}

*******************************/

/***********************************Exercise 1-9************************************
Write a program to copy its input to its output, replacing each string of one or more blanks by a single blank.
************************************************************************************/

/***********

#define NONBLANK ' '
int main()
{
  int c, lastc;

  lastc = NONBLANK;

  while((c = getchar()) != EOF)
  {
    if(c == ' ')
    {
      if(lastc != ' ')
        putchar(c);
    }
    else
      putchar(c);
    lastc = c;
  }
  return 0;
}

*****************/


/***********************************Exercise 1-10************************************
Write a program to copy its input to its output,
replacing each tab by \t, each backspace by \b, and each backslash by \\.
This makes tabs and backspaces visible in an unambiguous way.
************************************************************************************/

/*********************************************************************************
int main()
{
  int c;

  while((c = getchar()) != EOF)
  {
    if(c == '\t')
    {
      putchar('\\');
      putchar('t');
    }

    if(c == '\b')
    {
      putchar('\\');
      putchar('b');
    }

    if(c == '\\')
    {
      putchar('\\');
      putchar('\\');
    }

    if(c != '\t' && c != '\b' && c != '\\')
    {
      putchar(c);
    }
  }
  return 0;
}

******************************************************************/
